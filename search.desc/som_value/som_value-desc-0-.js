searchState.loadedDescShard("som_value", 0, "To convert values to types, and vice versa.\nMacro used to make AST-specific and BC-specific Value type …\nThe representation for interned strings. Made to work with …\nShared value representation logic (NaN boxing really)\nClass for storing a value itself as a typed pointer.\nI wish this were in an Eq trait, but it needs to lookup …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn interned string.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBase bit pattern needed to be set for all tags.\nTag bits for the <code>BigInteger</code> type.\nTag bits for the <code>Boolean</code> type.\nCanonical <code>NaN</code> representation (minimum bitfield to …\nBase bit pattern needed to be set for all tags that are …\nThe boolean <code>false</code> value.\nThe integer <code>1</code> value.\nTag bits for the <code>Integer</code> type.\nThe integer <code>0</code> value.\nBit pattern used to quickly check if a given 64-bit value …\nThe <code>nil</code> value.\nTag bits for the <code>Nil</code> type.\nTag bits for the <code>String</code> type.\nTag bits for the <code>Symbol</code> type.\nBit pattern used to quickly extract the tag bits from a …\nThe amount of bits to shift tags in the correct position …\nThe boolean <code>true</code> value.\nReturns this value as a big integer, if such is its type.\nReturns this value as a boolean, if such is its type.\nReturns this value as a boolean, but without checking …\nReturns this value as a double, if such is its type.\nReturns this value as an integer, if such is its type.\nReturns a pointer to the underlying data, given a …\nSafety\nReturns it at an arbitrary pointer. Used for debugging.\nReturns this value as a string, if such is its type.\nReturns this value as a symbol, if such is its type.\nReturn the value as its internal representation: a u64 …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns whether this value is a big integer.\nReturns whether this value is a boolean.\nReturns whether or not it’s a boolean corresponding to …\nReturns whether or not it’s a boolean corresponding to …\nReturns whether this value is a double.\nReturns whether this value is an integer.\nReturns whether this value is `nil``.\nReturns whether this value is a pointer type value.\nReturns whether this value is a string.\nReturns whether this value is a symbol.\nReturns a new big integer value.\nReturns a new boolean value.\nReturns a new double value.\nReturns a new integer value.\nReturns a new string value.\nReturns a new symbol value.\nReturns the payload bits of the value.\nReturns the tag bits of the value.\nBundles a value to a pointer with the type to its pointer.\nReturns the argument unchanged.\nReturns the underlying pointer value.\nReturns the underlying pointer value, without checking if …\nCalls <code>U::from(self)</code>.")