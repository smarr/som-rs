searchState.loadedDescShard("som_parser_core", 0, "Sequences two parsers, one after the other, collecting …\nSequences two parsers, one after the other, but discards …\nSequences two parsers, one after the other, but discards …\nMaps a function over the output value of the parser.\nTries to apply the first parser, if it fails, it tries to …\nDefines a parser.\nSequences two parsers, one after the other, collecting …\nSequences two parsers, one after the other, but discards …\nSequences two parsers, one after the other, but discards …\nGeneric parser combinators.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaps a function over the output value of the parser.\nTries to apply the first parser, if it fails, it tries to …\nApplies the parser on some input.\nRepresents a value of either type A (Left) or type B …\nApplies every parser in a slice, from left to right, and …\nTries to apply the first parser, if it fails, it tries to …\nTries every parser in a slice, from left to right, and …\nParses something that is enclosed between two other things.\nTries to apply a parser, or fallback to its default value …\nSame as <code>either</code>, but allows for different output types for …\nTries to apply a parser, or fallback to a constant value …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nApplies a parser zero or more times.\nTransforms the output value of a parser.\nRuns the given parser, fails if it succeeded, and succeeds …\nTries to apply a parser, but fails gracefully (with an …\nTransforms a parser into a non-consuming one, allowing to …\nParses zero or more things, separated by an arbitrary …\nParses one or more things, separated by an arbitrary …\nSequences two parsers, one after the other, collecting …\nApplies a parser one or more times.")