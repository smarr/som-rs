# -*- mode: yaml -*-
# Config file for ReBench
default_experiment: som-rs
default_data_file: 'rebench.data'

reporting:
    # Benchmark results will be reported to ReBenchDB
    rebenchdb:
        # this url needs to point to the API endpoint
        db_url: https://rebench.stefan-marr.de/rebenchdb
        repo_url: https://github.com/Hirevo/som-rs
        record_all: true # make sure everything is recorded
        project_name: som-rs

runs:
    max_invocation_time: 60

benchmark_suites:
    macro:
        gauge_adapter: RebenchLog
        command: &MACRO_CMD "-c core-lib/Smalltalk core-lib/Examples/Benchmarks core-lib/Examples/Benchmarks/Richards core-lib/Examples/Benchmarks/DeltaBlue core-lib/Examples/Benchmarks/NBody core-lib/Examples/Benchmarks/Json core-lib/Examples/Benchmarks/GraphSearch -- BenchmarkHarness %(benchmark)s %(iterations)s "
        iterations: 1
        invocations: 5
        benchmarks:
            - Richards:     {extra_args: 1, tags: [yuria2]}
            - DeltaBlue:    {extra_args: 50, tags: [yuria3]}
            - NBody:        {extra_args: 1000, tags: [yuria3]}
            - JsonSmall:    {extra_args: 1, tags: [yuria ]}
            - GraphSearch:  {extra_args: 7, tags: [yuria2]}
            - PageRank:     {extra_args: 75, tags: [yuria3]}

    micro:
        gauge_adapter: RebenchLog
        command: "-c core-lib/Smalltalk core-lib/Examples/Benchmarks core-lib/Examples/Benchmarks/LanguageFeatures core-lib/Examples/Benchmarks/TestSuite . -- BenchmarkHarness %(benchmark)s %(iterations)s "
        iterations: 1
        invocations: 5
        benchmarks:
            - Fannkuch:     {extra_args: 7,     tags: [yuria ]}
            - Fibonacci:    {extra_args: 10,    tags: [yuria2]}
            - Dispatch:     {extra_args: 10,    tags: [yuria3]}
            - Bounce:       {extra_args: 10,    tags: [yuria ]}
            - Loop:         {extra_args: 100,   tags: [yuria2]}
            - Permute:      {extra_args: 10,    tags: [yuria3]}
            - Queens:       {extra_args: 10,    tags: [yuria ]}
            - List:         {extra_args: 2,     tags: [yuria2]}
            - Recurse:      {extra_args: 12,    tags: [yuria3]}
            - Storage:      {extra_args: 8,     tags: [yuria ]}
            - Sieve:        {extra_args: 20,    tags: [yuria2]}
            - BubbleSort:   {extra_args: 15,    tags: [yuria3]}
            - QuickSort:    {extra_args: 15,    tags: [yuria ]}
            - Sum:          {extra_args: 40,    tags: [yuria2]}
            - Towers:       {extra_args: 2,     tags: [yuria3]}
            - TreeSort:     {extra_args: 7,     tags: [yuria ]}
            - IntegerLoop:  {extra_args: 500,   tags: [yuria2]}
            - FieldLoop:    {extra_args: 1,     tags: [yuria3]}
            - WhileLoop:    {extra_args: 30,    tags: [yuria ]}
            - Mandelbrot:   {extra_args: 50,    tags: [yuria2]}

    interpreter:
        description: Basic interpreter benchmarks for comparing performance of most basic concepts.
        gauge_adapter: RebenchLog
        command: "-c core-lib/Smalltalk core-lib/Examples/Benchmarks/Interpreter core-lib/Examples/Benchmarks -- BenchmarkHarness %(benchmark)s %(iterations)s 1"
        benchmarks:
            - ArgRead:                           {tags: [yuria ]}
            - ArrayReadConst:                    {tags: [yuria2]}
            - ArrayWriteConstConst:              {tags: [yuria3]}
            - BlockSend0ConstReturn:             {tags: [yuria ]}
            - Const:                             {tags: [yuria2]}
            - FieldConstWrite:                   {tags: [yuria3]}
            - FieldRead:                         {tags: [yuria ]}
            - FieldReadIncWrite:                 {tags: [yuria2]}
            - FieldReadWrite:                    {tags: [yuria3]}
            - GlobalRead:                        {tags: [yuria ]}
            - LocalConstWrite:                   {tags: [yuria2]}
            - LocalRead:                         {tags: [yuria3]}
            - LocalReadIncWrite:                 {tags: [yuria ]}
            - LocalReadWrite:                    {tags: [yuria2]}
            - SelfSend0:                         {tags: [yuria3]}
            - SelfSend0BlockConstNonLocalReturn: {tags: [yuria ]}

    somsom:
      description: Run benchmarks on the SOMSOM VM
      gauge_adapter: RebenchLog
      iterations: 1
      invocations: 5
      command: "-c core-lib/SomSom/src/compiler core-lib/SomSom/src/interpreter core-lib/SomSom/src/primitives/ core-lib/SomSom/src/vm/ core-lib/SomSom/src/vmobjects -c core-lib/Smalltalk -- MainLoadAll -cp core-lib/Smalltalk:core-lib/Examples/Benchmarks/LanguageFeatures core-lib/Examples/Benchmarks/BenchmarkHarness.som --gc %(benchmark)s %(iterations)s "
      benchmarks:
          - Loop:         {extra_args: 1, tags: [yuria3]}
          - Queens:       {extra_args: 1, tags: [yuria2]}
          - List:         {extra_args: 1, tags: [yuria3]}
          - Recurse:      {extra_args: 1, tags: [yuria ]}
          - Mandelbrot:   {extra_args: 3, tags: [yuria2]}

    macro-awfy:
        gauge_adapter: RebenchLog
        command: " -cp .:Core:CD:DeltaBlue:Havlak:Json:NBody:Richards:../../../core-lib/Smalltalk Harness.som  %(benchmark)s %(iterations)s "
        iterations: 15
        invocations: 1
        location: awfy/benchmarks/SOM
        benchmarks: 
            - DeltaBlue:
                extra_args: 12000
                codespeed_name: "AWFY DeltaBlue"
                tags: [yuria]
            - Richards:
                extra_args: 30
                codespeed_name: "AWFY Richards"
                tags: [yuria2]
            - Json:
                extra_args: 70
                codespeed_name: "AWFY Json"
                tags: [yuria3]
            - CD:
                extra_args: 200
                codespeed_name: "AWFY CD"
                tags: [yuria]
            - Havlak:
                extra_args: 150
                codespeed_name: "AWFY Havlak"
                tags: [yuria2]

executors:
    som-rs-ast:
        path: .
        executable: ./target/release/som-interpreter-ast
    som-rs-bc:
        path: .
        executable: ./target/release/som-interpreter-bc

# define the benchmarks to be executed for a re-executable benchmark run
experiments:
    som-rs:
        description: All benchmarks on som-rs
        suites:
            - micro
            - macro
            - interpreter
            - somsom
            - macro-awfy
        executions:
            - som-rs-ast
            - som-rs-bc
